library("survival")
pbcData<-pbc %>%
filter(!is.na(trt)) %>%
select(id, trt, age, bili, chol, albumin, copper, trig, protime) %>%
mutate(trt = fct_recode(factor(trt), Dpen="1", placebo = "2"))
head(pbcData)
library(tidyverse)
pbcData<-pbc %>%
filter(!is.na(trt)) %>%
select(id, trt, age, bili, chol, albumin, copper, trig, protime) %>%
mutate(trt = fct_recode(factor(trt), Dpen="1", placebo = "2"))
head(pbcData)
boxplot(chol ~ trt, data=pbcData)
hist(chol)
hist(pbcData$chol)
hist(pbcData$chol, breaks = 30)
H0: $\pi$
H0: $\pi$
t.test(chol)
t.test(chol ~ trt, var.equal= TRUE, data=pbcData)
t.test(chol ~ trt, var.equal= FALSE, data=pbcData)
#2
boxplot(protime ~ trt, data=pbcData)
library(knitr)
include_graphics("/Users/wyw/Desktop/yiwen.jpeg")
dat_NHANES <- read_tsv("nhgh.tsv")
library(tidyverse)
dat_NHANES <- read_tsv("nhgh.tsv")
dat_NHANES%>%
ggplot(aes(x = ht, color = sex, fill = sex))+
geom_histogram(binwidth = 1.5, alpha = 0.5, position = "identity")+
labs(title = "Distributions of Female and Male Heights: Histogram")+
xlab("height")
View(dat_NHANES)
library(nycflights13)
ggplot(data=prop, aes(x=month, y=propo))+
geom_point()+
geom_line()+
xlab("Month")+
scale_x_discrete(limits=c(1:12))+
ylab("Cancellation Proportion")+
ggtitle('The Relationship Between Cancellation Proportion and Months')
library(nycflights13)
prop.delays <- flights %>%
group_by(month) %>%
summarise(prop.delays = sum(is.na(dep_time))/n())
ggplot(prop.delays, aes(x= month, y = prop.delays)) +
geom_line() +
xlab('Month') +
ylab('Proportion of Delays') +
ggtitle('Proportion of Delays by Month')
?nycflights13
?flights
library(nycflights13)
prop.delays <- flights %>%
group_by(month) %>%
summarise(prop.delays = sum(is.na(dep_time))/n())
ggplot(prop.delays, aes(x= month, y = prop.delays)) +
geom_line() +
xlab('Month') +
ylab('Proportion of Delays') +
ggtitle('Proportion of Delays by Month')
dat_NHANES <- read_tsv("nhgh.tsv")
dat_NHANES%>%
ggplot(aes(x = ht, color = sex, fill = sex))+
geom_histogram(binwidth = 1.5, alpha = 0.5, position = "identity")+
labs(title = "Distributions of Female and Male Heights: Histogram")+
xlab("height")
dat_NHANES <- read_tsv("nhgh.tsv")
dat_NHANES%>%
ggplot(aes(x = ht, color = sex, fill = sex))+
geom_histogram(binwidth = 1.5, alpha = 0.5, position = "identity")+
labs(title = "Distributions of Female and Male Heights: Histogram")+
xlab("height")
dat_NHANES <- read_tsv("nhgh.tsv")
dat_NHANES%>%
ggplot(aes(x = ht, color = sex, fill = sex))+
geom_histogram(binwidth = 1.5, alpha = 0.5, position = "identity")+
labs(title = "Distributions of Female and Male Heights: Histogram")+
xlab("height")
dat_NHANES <- read_tsv("nhgh.tsv")
dat_NHANES%>%
ggplot(aes(x = ht, color = sex, fill = sex))+
geom_histogram(binwidth = 1.5, alpha = 0.5, position = "identity")+
labs(title = "Distributions of Female and Male Heights: Histogram")+
xlab("height")
dat_NHANES <- read_tsv("nhgh.tsv")
dat_NHANES%>%
ggplot(aes(x = ht, color = sex, fill = sex))+
geom_histogram(binwidth = 1.5, alpha = 0.5, position = "identity")+
labs(title = "Distributions of Female and Male Heights: Histogram")+
xlab("height")
#install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
dat_NHANES%>%
mutate(re =fct_recode(factor(re),`Mexican American`= "1",`Other Hispanic`= "2",`Non-Hispanic White`= "3",`Non-Hispanic Black`= "4",`Other Race Including Multi-Racial`= "5"))%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot()+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot()+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot(outline  = FALSE)+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot(outlier  = FALSE)+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot(outlier.shape =FALSE)+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot(outlier.fill =  FALSE)+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re,outline=FALSE))+
geom_boxplot()+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot(outline = FALSE)+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot(outlier.shape =  NA)+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot(outlier.shape =  NA, varwidth = TRUE)+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot(outlier.shape =  NA, notch = TRUE)+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot( aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),
stat = "identity")+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot( aes(ymin = min(y), lower = quantile(y,0.25), middle = median(y), upper = quantile(y,0.75), ymax = max(y)),
stat = "identity")+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
y<-dat_NHANES$gh
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot( aes(ymin = min(y), lower = quantile(y,0.25), middle = median(y), upper = quantile(y,0.75), ymax = max(y)),
stat = "identity")+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
dat_NHANES%>%
ggplot(aes(x =str_wrap(re,10), y = gh, fill = re))+
geom_boxplot()+
guides(fill = FALSE)+
labs(x = "Race / ethnicity", y = "glycohemoglobin", title = "BMI by race/ethnicity")
library(mosaic)
library(mosaic)
g <- ggplot(RailTrail, aes(y = volume, x = hightemp, colour = precip)) +
geom_point() +
ylab('Volume of Trail Use') + ## label y-axis of plot
xlab('Daily High Temperature (Degrees Fahrenheit)') + ## label x-axis of plot
ggtitle('Volume of Users of Rail Trail') + ## add title to plot
labs(colour = "Precipitation \n(Inches)") ## add title to legend
g
RailTrail <- RailTrail %>%
mutate(dayType2 = if_else(dayType == 'weekend', 'Weekend', 'Weekday'))
## update data for plot g to have dayType2
g <- g %+% RailTrail
facet_wrap(~dayType2)+
geom_smooth(method = 'lm')
RailTrail <- RailTrail %>%
mutate(dayType2 = if_else(dayType == 'weekend', 'Weekend', 'Weekday'))
## update data for plot g to have dayType2
g <- g %+% RailTrail+
facet_wrap(~dayType2)+
geom_smooth(method = 'lm')
g
gapminder%>%
filter(year==2007)%>%
ggplot(aes(x = continent, y = gdpPercap, fill=continent))+geom_boxplot()
library(gapminder)
library(gapminder)
gapminder%>%
filter(year==2007)%>%
ggplot(aes(x = continent, y = gdpPercap, fill=continent))+geom_boxplot()
View(dat_NHANES)
?lab
?xlab
dat_NHANES <- read_tsv("nhgh.tsv")
library(tidyverse)
dat_NHANES <- read_tsv("nhgh.tsv")
dat_NHANES%>%
ggplot(aes(x = ht, color = sex, fill = sex))+
geom_histogram(binwidth = 1.5, alpha = 0.5, position = "identity")+
labs(title = "Distributions of Female and Male Heights: Histogram")+
xlab("height")
library(nycflights13)
prop.delays <- flights %>%
group_by(month) %>%
summarise(prop.delays = sum(is.na(dep_time))/n()) ## calculate the proportion of cancelled flights
ggplot(prop.delays, aes(x= month, y = prop.delays)) +
geom_line() +
xlab('Month') + ## label x-axis of plot
ylab('Proportion of Delays') + ## label y-axis of plot
ggtitle('Proportion of Delays by Month') ## add title to plot
library(gapminder)
gapminder%>%
filter(year==2007)%>%
ggplot(aes(x = continent, y = gdpPercap, fill=continent))+
geom_boxplot()+
xlab('continent') + ## label x-axis of plot
ylab('GDP per capita') + ## label y-axis of plot
ggtitle('The GDP per capita for each continent') ## add title to plot
